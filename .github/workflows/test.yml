name: Deploy Test

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Choose your environment
        required: true
        options:
          - Test
          - Beta
  #schedule:
  #  - cron: '0 0 * * *'

run-name: Deploy to ${{ github.event.inputs.environment }}

env:
  AWS_REGION: ap-northeast-1
  IMAGE_TAG: test-image:latest
  FILE_PATH: cory-home/go.mod

jobs:
  ci:
    name: Test Env
    runs-on: ubuntu-latest
    outputs:
      DOCKERFILE_NAME: ${{ env.DOCKERFILE_NAME}}
      REPOSITORY: ${{ env.REPOSITORY }}
      EB_APP_NAME: ${{ env.EB_APP_NAME }}
      EB_APP_ENV: ${{ env.EB_APP_ENV }}
      TAG_OUTPUT: ${{ steps.build-image.outputs.tag-ouput }}
    steps:
      - name: Set ENV for Testing
        if: github.event.inputs.environment == 'Test'
        run: |
          echo "DOCKERFILE_NAME=Dockerfile.server" >> "$GITHUB_ENV"
          echo "REPOSITORY=arcade-galaxy" >> "$GITHUB_ENV"
          echo "EB_APP_NAME=ag-testing" >> "$GITHUB_ENV"
          echo "EB_APP_ENV=ag-testing-env" >> "$GITHUB_ENV"

      - name: Set ENV for Beta
        if: github.event.inputs.environment == 'Beta'
        run: |
          echo "DOCKERFILE_NAME=Dockerfile.beta.server" >> "$GITHUB_ENV"
          echo "REPOSITORY=arcade-galaxy-beta" >> "$GITHUB_ENV"
          echo "EB_APP_NAME=ag-beta" >> "$GITHUB_ENV"
          echo "EB_APP_ENV=ag-beta-env" >> "$GITHUB_ENV"

      - name: build
        id: build-image
        env:
          REGISTRY: "TEST"
          REPOSITORY: ${{ needs.ci.outputs.REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: echo "tag-ouput=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  build:
    name: Build image
    runs-on: ubuntu-latest
    needs: [ci]
    steps:
      - name: Check ENV
        run: |
          echo DOCKERFILE_NAME = ${{ needs.ci.outputs.DOCKERFILE_NAME }}
          echo REPOSITORY = ${{ needs.ci.outputs.REPOSITORY }}
          echo EB_APP_NAME = ${{ needs.ci.outputs.EB_APP_NAME }}
          echo EB_APP_ENV = ${{ needs.ci.outputs.EB_APP_ENV }}

      - name: Get timestamp
        id: get_timestamp
        shell: bash
        run: echo "timestamp=$(env TZ=Asia/Tokyo date '+%Y%m%d%H%M%S')" >> "$GITHUB_OUTPUT"

      - name: Get Elastic Beanstalk label
        id: get_label
        shell: bash
        run: echo "label=$(echo ${TAG}-${TIMESTAMP})" >> "$GITHUB_OUTPUT"
        env:
          TAG: "TEST"
          TIMESTAMP: ${{ steps.get_timestamp.outputs.timestamp }}

      - name: Show Label
        run: echo ${{ steps.get_label.outputs.label }}

      - name: Checkout files
        uses: Bhacaz/checkout-files@v2
        with:
          files: Dockerrun.aws.json

      - name: Package Dockerrun.aws.json
        run: |
          sed -i -e "s|@IMAGE|${{ needs.build.outputs.TAG_OUTPUT }}|g" Dockerrun.aws.json
          zip -r "deploy.zip" Dockerrun.aws.json
          echo "${{ needs.build.outputs.TAG_OUTPUT }}"

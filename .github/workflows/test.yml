name: Deploy Test

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Choose your environment
        required: true
        options:
          - Test
          - Beta
  #schedule:
  #  - cron: '0 0 * * *'

run-name: Deploy to ${{ github.event.inputs.environment }}

env:
  AWS_REGION: ap-northeast-1
  IMAGE_TAG: test-image:latest
  FILE_PATH: cory-home/go.mod

jobs:
  ci:
    name: Test Env
    runs-on: ubuntu-latest
    steps:
      - name: Set ENV for Testing
        if: github.event.inputs.environment == 'Test'
        run: |
          echo "DOCKERFILE_NAME=Dockerfile.server" >> "$GITHUB_ENV"
          echo "REPOSITORY=arcade-galaxy" >> "$GITHUB_ENV"
          echo "EB_APP_NAME=ag-testing" >> "$GITHUB_ENV"
          echo "EB_APP_ENV=ag-testing-env" >> "$GITHUB_ENV"

      - name: Set ENV for Beta
        if: github.event.inputs.environment == 'Beta'
        run: |
          echo "DOCKERFILE_NAME=Dockerfile.beta.server" >> "$GITHUB_ENV"
          echo "REPOSITORY=arcade-galaxy-beta" >> "$GITHUB_ENV"
          echo "EB_APP_NAME=ag-beta" >> "$GITHUB_ENV"
          echo "EB_APP_ENV=ag-beta-env" >> "$GITHUB_ENV"

      - name: Check ENV
        env:
          REPOSITORY: $${{ env.REPOSITORY }}
        run: |
          echo DOCKERFILE_NAME = ${{ env.DOCKERFILE_NAME }}
          echo REPOSITORY = ${{ env.REPOSITORY }}
          echo EB_APP_NAME = ${{ env.EB_APP_NAME }}
          echo EB_APP_ENV = ${{ env.EB_APP_ENV }}
      
      - name: Checkout files
        uses: Bhacaz/checkout-files@v2
        with:
          files: Dockerrun.aws.json AG_Server AG_UnityProject ${{ env.FILE_PATH }}
         
      - name: Change aws file  
        run: |
          sed -i -e "s|@IMAGE|${{ env.IMAGE_TAG }}|g" Dockerrun.aws.json

      - name: Read Dockerfile
        id: filesinfo
        uses: juliangruber/read-file-action@v1
        with:
          path: ./AG_UnityProject/Asserts/ServerShared/Scripts/Test.txt
          
      - name: Echo Dockerfile
        run: echo "${{ steps.filesinfo.outputs.content }}"
      
      - name: Read AWS json
        id: awsjson
        uses: juliangruber/read-file-action@v1
        with:
          path: ./Dockerrun.aws.json
          
      - name: Echo AWS JSON
        run: echo "${{ steps.awsjson.outputs.content }}"
      
      - name: Show files struct
        run: ls
